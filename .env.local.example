# ============================================
# Modular History Data Collection System - Environment Configuration
# ============================================

# Copy this file to .env.local and configure for your environment

# ===== ADX Configuration (Required) =====
# Get these values from your deployed Terraform infrastructure:
# - terraform output adx_cluster_uri
# - terraform output adx_database_name
ADX_CLUSTER_URI=https://your-adx-cluster.region.kusto.windows.net
ADX_DATABASE_NAME=pricing-metrics

# ===== Global Job Configuration =====
JOB_TYPE=local-test
ENVIRONMENT=local
LOG_LEVEL=INFO
ADX_LOG_LEVEL=WARNING

# ===== Azure Authentication =====
# For production (set automatically in Container Apps)
AZURE_CLIENT_ID=your-managed-identity-client-id
AZURE_TENANT_ID=your-tenant-id
AZURE_SUBSCRIPTION_ID=your-subscription-id

# ===== Azure Pricing Collector =====

# Enable Azure Pricing Collector
ENABLE_AZURE_PRICING_COLLECTOR=true
AZURE_PRICING_MAX_ITEMS=-1
AZURE_PRICING_API_RETRY_ATTEMPTS=3
AZURE_PRICING_API_RETRY_DELAY=2.0
#AZURE_PRICING_FILTERS='{"serviceName": "Virtual Machines", "armRegionName": "eastus"}'

# AZURE_PRICING_FILTERS: Optional JSON filter for targeted data collection
# Follows Azure Retail Prices API OData syntax (case-sensitive)
# Examples:
# Virtual Machines only: {"serviceName": "Virtual Machines"}
# VM Reservations: {"serviceName": "Virtual Machines", "priceType": "Reservation"}
# Compute services: {"serviceFamily": "Compute"}
# Specific region: {"armRegionName": "westeurope"}
# Multiple conditions: {"serviceName": "Virtual Machines", "armRegionName": "eastus", "priceType": "Consumption"}
# AZURE_PRICING_FILTERS={"serviceName": "Virtual Machines"}

# ===== Azure Cost Collector (Template) =====
# Enable this template collector for testing/development
ENABLE_COST_COLLECTOR=false
COST_TIMEFRAME=MonthToDate
COST_GRANULARITY=Daily

# ===== Future Collectors =====
# Add new collectors here following the pattern:
# ENABLE_[COLLECTOR_NAME]_COLLECTOR=true
# [COLLECTOR_NAME]_SPECIFIC_CONFIG=value

# Example for future collectors:
# ENABLE_RESOURCE_COLLECTOR=false
# RESOURCE_SUBSCRIPTION_ID=your-subscription-id
#
# ENABLE_DATABASE_COLLECTOR=false
# DATABASE_CONNECTION_STRING=your-connection-string

# ===== Local Development Notes =====
# Authentication (in order of preference):
# 1. Azure CLI authentication (az login) - Recommended
# 2. VS Code authentication
# 3. DefaultAzureCredential chain
#
# Permissions Required:
# - Your Azure account needs ADX Database Admin role on the target database
# - Run: az login before executing locally

# ===== Production Notes =====
# Container Apps Environment:
# - User-assigned Managed Identity with ADX Admin role (set by Terraform)
# - Authentication automatically handled via AZURE_CLIENT_ID
# - All JOB_*, MSI_*, IDENTITY_* variables set automatically

# ===== Adding New Collectors =====
# 1. Create collector class extending BaseCollector
# 2. Add configuration in shared/config.py
# 3. Register in core/orchestrator.py
# 4. Add environment variables here
# 5. Create documentation in collectors/YOUR_COLLECTOR.md
